#include<stdio.h>
#include<stdlib.h>
#include<math.h>

struct NODE
{
    int x,y,z,coef;
    struct NODE *link;
};

typedef struct NODE* node;

node getnode()
{
    node x;
    x=(node)malloc(sizeof(struct NODE));
    return x;
}

node read()
{
    char ch;
    node temp,head,cur;
    temp=getnode();
    head=temp;
    head->coef=-1;
    head->x=-1;
    head->y=-1;
    head->z=-1;
    head->link=head;

    do
    {
        temp=getnode();
        printf("Coef,x,y,z:\t");
        scanf("%d%d%d%d",&temp->coef,&temp->x,&temp->y,&temp->z);

        cur=head;

        while(cur->link!=head)
        {
            cur=cur->link;
        }

        cur->link=temp;
        temp->link=head;

        printf("Do you want to enter more?(y/n):");
        gets(stdin);
        scanf("%c",&ch);
    }while(ch=='Y'||ch=='y');

    return head;
}

void attach(int cf,int x1,int y1,int z1,node *ptr)
{
    node temp=getnode();
    temp->coef=cf;
    temp->x=x1;
    temp->y=y1;
    temp->z=z1;
    (*ptr)->link=temp;
    *ptr=temp;
}

int compare(node a,node b)
{
    if(a->x>b->x)
        return 1;

    else if(a->x<b->x)
        return -1;

    else if(a->y>b->y)
        return 1;

    else if(a->y<b->y)
        return -1;

    else if(a->z>b->z)
        return 1;

    else if(a->z<b->z)
        return -1;

    return 0;
}

node addpoly(node a,node b)
{
    node starta,c,lastc;
    int sum,done=0;
    starta=a;
    a=a->link;
    b=b->link;
    c=getnode();
    c->coef=-1;
    c->x=-1;
    c->y=-1;
    c->z=-1;
    lastc=c;

    do
    {
        switch(compare(a,b))
        {
            case -1:attach(b->coef,b->x,b->y,b->z,&lastc);
                    b=b->link;
                    break;

            case 0: if(a==starta)
                        done=1;

                    else
                    {
                        sum=a->coef+b->coef;
                        attach(sum,a->x,a->y,a->z,&lastc);
                        a=a->link;
                        b=b->link;
                        break;
                    }

            case 1: if(a==starta)
                        done=1;

                    else
                    {
                        attach(a->coef,a->x,a->y,a->z,&lastc);
                        a=a->link;
                        break;
                    }
        }
    }while(!done);

    lastc->link=c;

    return c;
}

void print(node ptr)
{
    node cur;
    cur=ptr->link;

    while(cur!=ptr)
    {
        printf("%d x^%d y^%d z^%d\t",cur->coef,cur->x,cur->y,cur->z);
        cur=cur->link;

        if(cur!=ptr)
        {
            printf("+\t");
        }
    }
    printf("\n");
}

void evaluate(node ptr)
{
    node cur=ptr->link;
    int x1,y1,z1,res=0;

    printf("x,y,z:\t");
    scanf("%d%d%d",&x1,&y1,&z1);

    while(cur!=ptr)
    {
        res+=cur->coef*pow(x1,cur->x)*pow(y1,cur->y)*pow(z1,cur->z);
        cur=cur->link;
    }
    printf("%d",res);
}

void main()
{
    node a,b,c;
    int ch;

    printf("1.Enter polynomial A\n2.Enter polynomial B\n3.Add two polynomial in C\n4.Print polynomial\n5.Evaluate polynomial\n6.Exit");
    while(1)
    {
            printf("Enter your choice:\t");
            scanf("%d",&ch);

            switch(ch)
            {
                case 1: a=read();
                    break;

                case 2: b=read();
                        break;

                case 3: c=addpoly(a,b);
                        break;

                case 4: print(c);
                        break;

                case 5: evaluate(c);
                        break;

                case 6:return;
            }
    }

}
